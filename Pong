import pygame

# Initialize Pygame
pygame.init()

# Set up the game window
screen_width = 640
screen_height = 480
screen = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption("Pong")

# Set up the colors
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)

# Set up the paddles and ball
paddle_width = 15
paddle_height = 60
paddle_speed = 5
ball_size = 10
ball_speed = [5, 5]

left_paddle = pygame.Rect(50, 200, paddle_width, paddle_height)
right_paddle = pygame.Rect(screen_width - 50 - paddle_width, 200, paddle_width, paddle_height)
ball = pygame.Rect(screen_width/2 - ball_size/2, screen_height/2 - ball_size/2, ball_size, ball_size)

# Set up the score
font = pygame.font.Font(None, 36)
left_score = 0
right_score = 0

# Main game loop
running = True
while running:
    # Handle events
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
    
    # Move the paddles
    keys = pygame.key.get_pressed()
    if keys[pygame.K_w] and left_paddle.top > 0:
        left_paddle.move_ip(0, -paddle_speed)
    if keys[pygame.K_s] and left_paddle.bottom < screen_height:
        left_paddle.move_ip(0, paddle_speed)
    if keys[pygame.K_UP] and right_paddle.top > 0:
        right_paddle.move_ip(0, -paddle_speed)
    if keys[pygame.K_DOWN] and right_paddle.bottom < screen_height:
        right_paddle.move_ip(0, paddle_speed)
    
    # Move the ball
    ball.move_ip(ball_speed)
    
    # Check for collisions
    if ball.left < 0:
        right_score += 1
        ball.center = (screen_width/2, screen_height/2)
        ball_speed[0] *= -1
    elif ball.right > screen_width:
        left_score += 1
        ball.center = (screen_width/2, screen_height/2)
        ball_speed[0] *= -1
    elif ball.top < 0 or ball.bottom > screen_height:
        ball_speed[1] *= -1
    elif ball.colliderect(left_paddle) or ball.colliderect(right_paddle):
        ball_speed[0] *= -1
    
    # Clear the screen
    screen.fill(BLACK)
    
    # Draw the paddles and ball
    pygame.draw.rect(screen, WHITE, left_paddle)
    pygame.draw.rect(screen, WHITE, right_paddle)
    pygame.draw.ellipse(screen, WHITE, ball)
    
    # Draw the score
    score_text = f"{left_score} : {right_score}"
    score_render = font.render(score_text, True, WHITE)
    score_rect = score_render.get_rect(center=(screen_width/2, 30))
    screen.blit(score_render, score_rect)
    
    # Update the display
    pygame.display.flip()

# Clean up Pygame
pygame.quit()
